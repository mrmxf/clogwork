# Copyright ©2017-2025  Mr MXF   info@mrmxf.com
# BSD-3-Clause License           https://opensource.org/license/bsd-3-clause/
# clogwork - collection of reusable actions and tools for Mr MXF project.
#   _             _   _      _                      _                      
#  | |__   _  _  (_) | |  __| |  ___   __ _   ___  | |  __ _   _ _    __ _ 
#  | '_ \ | || | | | | | / _` | |___| / _` | / _ \ | | / _` | | ' \  / _` |
#  |_.__/  \_,_| |_| |_| \__,_|       \__, | \___/ |_| \__,_| |_||_| \__, |
#                                     |___/                          |___/ 
#
#  GitHub Workflow to build golang executable artifacts

name: build-golang
run-name: 🥷${{ github.actor }} 🏃‍➡️ ${{ github.workflow }}.${{ github.job }}(clogwork/.../build-golang)"
env:
  CLOGWORK_REPO: "mrmxf/clogwork/.github/workflows"
  CLOGWORK_FLOW: "mrmxf/clogwork/.github/workflows/build-golang"
on:
  workflow_call:
    inputs:
      artifact-name:
        required: true
        type: string
    secrets:
      aws_access_key_id:
        required: false
      aws_secret_access_key:
        required: false
      get_clog:
        required: true
      clog_bucket:
        required: false
      s3_bucket:
        required: false
      webhook_slack:
        required: false
    outputs:
      message:
        description: "Result of the deploy for announcing on slack"
        value: ${{ jobs.deploy-s3.outputs.message }}

jobs:
  deploy-s3:
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.deploy-s3.outputs.message }}

    steps:
      - # ---------------------------------------------------------------------
        id: checkout
        name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - # ---------------------------------------------------------------------
        name: artifact(${{ inputs.artifact-name }}) → tmp/
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
      - # ---------------------------------------------------------------------
        id: get-clog
        name: get clog
        env:
          GET_CLOG: ${{ secrets.get_clog }}
        run: |
          eval "$GET_CLOG"
          clog Log -I "Reusable workflow: ${{ env.CLOGWORK_FLOW}}"
      - # ---------------------------------------------------------------------
        id: deploy-s3
        name: golang build artifacts with clog
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
          CLOG_BUCKET: ${{ secrets.clog_bucket }}
        run: |
          CACHE="$(clog workflow-message-file)"
          rm -f $CACHE >/dev/null 2>&1  # delete any notify file
          clog deploy
          if [ -f $CACHE ]; then
            echo "message=\"$(cat $CACHE)\"" >> $GITHUB_OUTPUT
          else
            mImage="$DOCKER_NS/${{ github.event.repository.name }}:"
            printf "message=\"deploy: $mImage, github action: $CLOGWORK_FLOW\"" >> $GITHUB_OUTPUT
          fi
      - # ---------------------------------------------------------------------
        id: notify
        name: notify-team
        env:
          CLOG_DEPLOY_MSG: ${{ steps.deploy-s3.outputs.message }}
        run: clog Log -I "$CLOG_DEPLOY_MSG"
