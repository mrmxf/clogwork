# Copyright ©2017-2025  Mr MXF   info@mrmxf.com
# BSD-3-Clause License           https://opensource.org/license/bsd-3-clause/
# clogwork - collection of reusable actions and tools for Mr MXF project.
#   _             _   _      _                      _                      
#  | |__   _  _  (_) | |  __| |  ___   __ _   ___  | |  __ _   _ _    __ _ 
#  | '_ \ | || | | | | | / _` | |___| / _` | / _ \ | | / _` | | ' \  / _` |
#  |_.__/  \_,_| |_| |_| \__,_|       \__, | \___/ |_| \__,_| |_||_| \__, |
#                                     |___/                          |___/ 
#
#  GitHub Workflow to build golang executable artifacts

name: build-golang
run-name: 🥷${{ github.actor }} 🏃‍➡️ ${{ github.workflow }}.${{ github.job }}(clogwork/.../build-golang)"
env:
  CLOGWORK_REPO: "mrmxf/clogwork/.github/workflows"
  CLOGWORK_FLOW: "mrmxf/clogwork/.github/workflows/build-golang"
on:
  workflow_call:
    inputs:
      artifact-name:
        required: true
        type: string
      docker_ns:
        required: false
        type: string
    secrets:
      aws_access_key_id:
        required: false
      aws_secret_access_key:
        required: false
      docker_pat:
        required: false
      get_clog:
        required: true
      clog_bucket:
        required: false
      s3_bucket:
        required: false
      webhook_slack:
        required: false
    outputs:
      message:
        description: "Result of the build for announcing on slack"
        value: ${{ jobs.clog-build.outputs.message }}

jobs:
  build-golang:
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.clog-build.outputs.message }}

    steps:
      - # ---------------------------------------------------------------------
        id: check
        name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - # ---------------------------------------------------------------------{{
        id: docker
        if:  inputs.docker_ns != '' # ignore this step if no namespace, fail if _pat empty
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{  inputs.docker_ns }}
          password: ${{ secrets.docker_pat }}
      - # ---------------------------------------------------------------------
        id: get-clog
        name: get clog
        env:
          GET_CLOG: ${{ secrets.get_clog }}
        run: |
          eval "$GET_CLOG"
          clog Log -I "Reusable workflow: ${{ env.CLOGWORK_FLOW}}"
      - # ---------------------------------------------------------------------
        id: clog-setup
        name: setup tools
        run: |
          clog install golang
          clog install hugo
          clog install ko
      - # ---------------------------------------------------------------------
        id: clog-build
        name: golang build artifacts with clog
        env:
          DOCKER_NS: ${{ inputs.docker_ns }}
        run: |
          CACHE="$(clog workflow-message-file)"
          rm -f $CACHE >/dev/null 2>&1  # delete any notify file
          clog build
          if [ -f $CACHE ]; then
            echo "message=\"$(cat $CACHE)\"" >> $GITHUB_OUTPUT
          else
            mImage="$DOCKER_NS/${{ github.event.repository.name }}:"
            printf "message=\"build: $mImage, github action: $CLOGWORK_FLOW\"" >> $GITHUB_OUTPUT
          fi
      - # ---------------------------------------------------------------------
        name: tmp/ → artifact(${{ inputs.artifact-name }})
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          retention-days: 2
          path: tmp
      - # ---------------------------------------------------------------------
        id: notify
        if: ${{ env.HOOK_SLACK != '' }}
        name: notify-team
        env:
          MESSAGE: ${{ steps.clog-build.outputs.message }}
          ACTOR: ${{ github.actor }}
          EVENT: ${{ github.event_name }}
          JOB: ${{ github.job }}
          REPO: ${{ github.repository }}
          REF: ${{ github.ref }}
          REF_TYPE: ${{ github.ref_type }}
          WORKFLOW: ${{ github.workflow }}
          HOOK_SLACK:  ${{ secrets.webhook_slack }}
        run: |
          clog Log -I "Rx message:\n$MESSAGE"
          MSG="msg: \"$MESSAGE\" by: $ACTOR, workflow: $WORKFLOW, repo: $REPO:$REF($REF_TYPE), job: $JOB, event: $EVENT"
          clog Log -I "Tx message:\n$MSG"
          # use clog to ping slack via the webhook
          clog Slack "$MSG"
          clog Log -I "done"
